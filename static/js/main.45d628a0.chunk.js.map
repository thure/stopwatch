{"version":3,"sources":["theme/palettes/index.ts","theme/palettes/light.ts","theme/palettes/dark.ts","theme/index.ts","t10s/en.ts","components/Stopwatch.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["light","themePrimary","white","black","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","dark","prefersDark","window","matchMedia","matches","loadTheme","palette","palettes","lap","start","pause","resume","reset","container","display","flexFlow","height","timer","theme","width","fontSize","fontWeight","fill","actionRow","justifyContent","padding","margin","btn","marginRight","paddingBottom","flex","lapList","overflowY","renderDigits","time","Math","floor","toString","padStart","Stopwatch","t","css","useFela","timerRef","useRef","animateRef","totalStartTimeRef","totalOffsetRef","totalRef","lapStartTimeRef","lapOffsetRef","useState","laps","setLaps","running","setRunning","lapsColumns","key","name","ariaLabel","fieldName","minWidth","lapsItems","map","lapTime","i","digits","lap_index","lap_time","slice","join","updateTimer","current","$digits","children","textContent","animate","useCallback","prevRunning","Date","now","requestAnimationFrame","useEffect","className","viewBox","role","aria-live","aria-atomic","ref","x","y","textLength","textAnchor","DefaultButton","onClick","disabled","Text","variant","PrimaryButton","cancelAnimationFrame","data-is-scrollable","DetailsList","columns","items","selectionMode","felaRenderer","createRenderer","outer","minHeight","maxWidth","inner","boxSizing","Main","App","RendererProvider","renderer","ThemeProvider","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wPAIe,GAAEA,MCJF,CACbC,aAAc,UACdC,MAAO,UACPC,MAAO,UACPC,kBAAmB,UACnBC,eAAgB,UAChBC,aAAc,UACdC,qBAAsB,UACtBC,kBAAmB,UACnBC,mBAAoB,UACpBC,gBAAiB,UACjBC,iBAAkB,UAClBC,kBAAmB,UACnBC,eAAgB,UAChBC,YAAa,UACbC,gBAAiB,UACjBC,aAAc,UACdC,WAAY,UACZC,cAAe,UACfC,eAAgB,UAChBC,aAAc,UACdC,UAAW,UACXC,YAAa,WDlBSC,KEJT,CACbtB,aAAc,UACdC,MAAO,UACPC,MAAO,UACPC,kBAAmB,UACnBC,eAAgB,UAChBC,aAAc,UACdC,qBAAsB,UACtBC,kBAAmB,UACnBC,mBAAoB,UACpBC,gBAAiB,UACjBC,iBAAkB,UAClBC,kBAAmB,UACnBC,eAAgB,UAChBC,YAAa,UACbC,gBAAiB,UACjBC,aAAc,UACdC,WAAY,UACZC,cAAe,UACfC,eAAgB,UAChBC,aAAc,UACdC,UAAW,UACXC,YAAa,Y,QCjBTE,IACc,qBAAXC,SAA0BA,OAAM,aACnCA,OAAOC,WAAW,gCAAgCC,QAGxDC,YAAU,CACRC,QAASL,EAAcM,EAASP,KAAOO,EAAS9B,QAQnC,OACbA,MAAO8B,EAAS9B,MAChBuB,KAAMO,EAASP,MCrBF,GACbQ,IAAK,MACLC,MAAO,QACPC,MAAO,QACPC,OAAQ,SACRC,MAAO,QACP,mBAAoB,IACpB,kBAAmB,IACnB,YAAa,aACb,WAAY,OACZ,YAAa,MACb,kBAAmB,aACnB,iBAAkB,Y,mDCAdC,EAAY,iBAAe,CAC/BC,QAAS,OACTC,SAAU,gBACVC,OAAQ,SAGJC,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,MAAuC,CACnDC,MAAO,OACPL,QAAS,QACTM,SAAU,OACVC,WAAY,IACZC,KAAMJ,EAAMzC,MAAMG,MAClB,sCAAuC,CACrC0C,KAAMJ,EAAMlB,KAAKpB,SAIf2C,EAAY,iBAAO,CACvBT,QAAS,OACTC,SAAU,aACVS,eAAgB,SAChBC,QAAS,UACTC,OAAQ,qBACR,4BAA6B,CAC3BD,QAAS,SACTC,OAAQ,wBAINC,EAAM,iBAAO,CACjBC,YAAa,QACbC,cAAe,QACfC,KAAM,UAGFC,EAAU,iBAAe,CAC7BD,KAAM,QACNE,UAAW,SAGb,SAASC,EAAaC,GASpB,OARYC,KAAKC,MAAMF,EAAO,KAC3BG,SAAS,IACTC,SAAS,EAAG,MAEJH,KAAKC,MAAMF,EAAO,KAAO,IAAIG,SAAS,IAAIC,SAAS,EAAG,MAErDH,KAAKC,MAAMF,EAAO,IAAM,KAAKG,SAAS,IAAIC,SAAS,EAAG,KAoLrDC,MA/Kf,YAA2C,IAAtBC,EAAqB,EAArBA,EACXC,EAAQC,YAAmB,IAA3BD,IAEFE,EAAWC,iBAAsB,MACjCC,EAAaD,mBAEbE,EAAoBF,iBAAe,GACnCG,EAAiBH,iBAAe,GAChCI,EAAWJ,iBAAe,GAE1BK,EAAkBL,iBAAe,GACjCM,EAAeN,iBAAe,GAXI,EAahBO,mBAAmB,IAbH,mBAajCC,EAbiC,KAa3BC,EAb2B,OAcVF,oBAAkB,GAdR,mBAcjCG,EAdiC,KAcxBC,EAdwB,KAgBlCC,EAAyB,CAC7B,CACEC,IAAK,OACLC,KAAMlB,EAAE,aACRmB,UAAWnB,EAAE,mBACboB,UAAW,YACXC,SAAU,IAEZ,CACEJ,IAAK,OACLC,KAAMlB,EAAE,YACRmB,UAAWnB,EAAE,kBACboB,UAAW,WACXC,SAAU,KAIRC,EAAYV,EAAKW,KAAI,SAACC,EAASC,GACnC,IAAMC,EAASjC,EAAa+B,GAC5B,MAAO,CACLG,UAAU,GAAD,OAAK3B,EAAE,aAAP,YAAuByB,EAAI,GACpCG,SAAU,CACRF,EAAOG,MAAM,EAAG,GAChB7B,EAAE,oBACF0B,EAAOG,MAAM,EAAG,GAChB7B,EAAE,mBACF0B,EAAOG,MAAM,EAAG,IAChBC,KAAK,QAIX,SAASC,IACP,GAAI5B,GAAYA,EAAS6B,QAAS,CAChC,IAAMN,EAASjC,EAAae,EAASwB,SAC/BC,EAAU9B,EAAS6B,QAAQE,SACjCD,EAAQ,GAAGE,YAAcT,EAAO,GAChCO,EAAQ,GAAGE,YAAcT,EAAO,GAChCO,EAAQ,GAAGE,YAAcT,EAAO,GAChCO,EAAQ,GAAGE,YAAcT,EAAO,GAChCO,EAAQ,GAAGE,YAAcT,EAAO,GAChCO,EAAQ,GAAGE,YAAcT,EAAO,IAIpC,IAAMU,EAAUC,uBAAY,WAC1BtB,GAAW,SAACuB,GAAD,OAAiBA,KAC5B9B,EAASwB,QACPzB,EAAeyB,QAAUO,KAAKC,MAAQlC,EAAkB0B,QAC1DD,IACIjB,IAAST,EAAW2B,QAAUS,sBAAsBL,MACvD,CAACtB,IAuCJ,OArCA4B,qBAAU,WACJ5B,IAAST,EAAW2B,QAAUS,sBAAsBL,MACvD,CAACA,EAAStB,IAoCX,6BAAS6B,UAAW1C,EAAI5B,IACtB,yBACEuE,QAAQ,aACRD,UAAW1C,EAAIxB,GACfoE,KAAK,QACLC,YAAU,SACVC,cAAY,OACZC,IAAK7C,GAEL,0BAAM8C,EAAE,MAAMC,EAAE,KAAKC,WAAW,KAAKC,WAAW,UAAhD,KAGA,0BAAMH,EAAE,OAAOC,EAAE,KAAKC,WAAW,KAAKC,WAAW,UAAjD,KAGA,0BAAMH,EAAE,OAAOC,EAAE,KAAKC,WAAW,IAAIC,WAAW,UAC7CpD,EAAE,qBAEL,0BAAMiD,EAAE,OAAOC,EAAE,KAAKC,WAAW,KAAKC,WAAW,UAAjD,KAGA,0BAAMH,EAAE,OAAOC,EAAE,KAAKC,WAAW,KAAKC,WAAW,UAAjD,KAGA,0BAAMH,EAAE,OAAOC,EAAE,KAAKC,WAAW,IAAIC,WAAW,UAC7CpD,EAAE,oBAEL,0BAAMiD,EAAE,OAAOC,EAAE,KAAKC,WAAW,KAAKC,WAAW,UAAjD,KAGA,0BAAMH,EAAE,QAAQC,EAAE,KAAKC,WAAW,KAAKC,WAAW,UAAlD,MAIF,yBAAKT,UAAW1C,EAAIlB,IAClB,kBAACsE,EAAA,EAAD,CACEV,UAAW1C,EAAId,GACfmE,QAzDR,WACMxC,GAEFD,EAAQ,GAAD,mBACFD,GADE,CAELF,EAAasB,QAAUO,KAAKC,MAAQ/B,EAAgBuB,WAEtDvB,EAAgBuB,QAAUO,KAAKC,MAC/B9B,EAAasB,QAAU,GACdzB,EAAeyB,QAAU,IAElCxB,EAASwB,QAAU,EACnBzB,EAAeyB,QAAU,EACzBtB,EAAasB,QAAU,EACvBnB,EAAQ,IACRkB,MA2CIwB,WAAYzC,GAAWP,EAAeyB,QAAU,IAEhD,kBAACwB,EAAA,EAAD,CAAMC,QAAQ,SACX3C,EACGd,EAAC,IACDO,EAAeyB,QAAU,EACzBhC,EAAC,MACDA,EAAC,MAGT,kBAAC0D,EAAA,EAAD,CAAef,UAAW1C,EAAId,GAAMmE,QAlF1C,WACMxC,GAC4B,kBAAvBT,EAAW2B,SAChB2B,qBAAqBtD,EAAW2B,SAClCzB,EAAeyB,QAAUxB,EAASwB,QAClCtB,EAAasB,QAAUO,KAAKC,MAAQ/B,EAAgBuB,QACpDjB,GAAW,KAEXA,GAAW,GACXN,EAAgBuB,QAAUO,KAAKC,MAC/BlC,EAAkB0B,QAAUO,KAAKC,SAyE7B,kBAACgB,EAAA,EAAD,CAAMC,QAAQ,SACX3C,EACGd,EAAC,MACDO,EAAeyB,QAAU,EACzBhC,EAAC,OACDA,EAAC,SAIX,yBAAK2C,UAAW1C,EAAIV,GAAUqE,sBAAoB,GAChD,kBAACC,EAAA,EAAD,CACEC,QAAS9C,EACT+C,MAAOzC,EACP0C,cAAe,OCjOnBC,EAAeC,cAEfC,EAAQ,iBAAe,CAC3B7F,QAAS,OACTC,SAAU,aACVS,eAAgB,SAChBoF,UAAW,QACXC,SAAU,QACVnF,OAAQ,WAGJoF,EAAQ,iBAAe,CAC3BC,UAAW,aACXtF,QAAS,OACTN,MAAO,SAGT,SAAS6F,IAAQ,IACPvE,EAAQC,YAAQ,IAAhBD,IACR,OACE,0BAAM0C,UAAW1C,EAAIkE,GAAQtB,KAAK,eAChC,yBAAKF,UAAW1C,EAAIqE,IAClB,kBAAC,EAAD,CAAWtE,EAAGA,MAgBPyE,MAVf,WACE,OACE,kBAACC,EAAA,EAAD,CAAkBC,SAAUV,GAC1B,kBAACW,EAAA,EAAD,CAAelG,MAAOA,GACpB,kBAAC8F,EAAD,SC3BYK,QACW,cAA7BnH,OAAOoH,SAASC,UAEe,UAA7BrH,OAAOoH,SAASC,UAEhBrH,OAAOoH,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.45d628a0.chunk.js","sourcesContent":["import dark from './dark'\nimport light from './light'\n\nexport { light, dark }\nexport default { light, dark }\n","export default {\n  themePrimary: '#375EED',\n  white: '#f0f1f1',\n  black: '#372F45',\n  neutralLighterAlt: '#f4f5f5',\n  neutralLighter: '#f0f1f1',\n  neutralLight: '#dbdadd',\n  neutralQuaternaryAlt: '#c5c5c9',\n  neutralQuaternary: '#adacb3',\n  neutralTertiaryAlt: '#96949d',\n  neutralTertiary: '#817e8a',\n  neutralSecondary: '#6e6978',\n  neutralPrimaryAlt: '#5c5768',\n  neutralPrimary: '#4d475a',\n  neutralDark: '#3b3449',\n  themeLighterAlt: '#a0b1da',\n  themeLighter: '#708dd8',\n  themeLight: '#4e73e0',\n  themeTertiary: '#3f56bb',\n  themeSecondary: '#424f99',\n  themeDarkAlt: '#414881',\n  themeDark: '#3f406d',\n  themeDarker: '#3a344e',\n}\n","export default {\n  themePrimary: '#FF9390',\n  white: '#222022',\n  black: '#FBF6EF',\n  neutralLighterAlt: '#262525',\n  neutralLighter: '#292828',\n  neutralLight: '#3e3c3b',\n  neutralQuaternaryAlt: '#4f4d4b',\n  neutralQuaternary: '#62605d',\n  neutralTertiaryAlt: '#777471',\n  neutralTertiary: '#8c8986',\n  neutralSecondary: '#a3a09b',\n  neutralPrimaryAlt: '#bbb8b3',\n  neutralPrimary: '#d4cfc9',\n  neutralDark: '#eae5df',\n  themeLighterAlt: '#c97977',\n  themeLighter: '#e08481',\n  themeLight: '#f48e8b',\n  themeTertiary: '#fe9c98',\n  themeSecondary: '#fdada7',\n  themeDarkAlt: '#fcbbb5',\n  themeDark: '#fbcac3',\n  themeDarker: '#fbd6ce',\n}\n","import palettes from './palettes'\n\nimport { loadTheme } from '@fluentui/react'\nimport { IPalette } from '@uifabric/styling/lib/interfaces/IPalette'\n\nconst prefersDark =\n  typeof window !== 'undefined' && window['matchMedia']\n    ? window.matchMedia('(prefers-color-scheme: dark)').matches\n    : false\n\nloadTheme({\n  palette: prefersDark ? palettes.dark : palettes.light,\n})\n\nexport type Theme = {\n  light: Partial<IPalette>\n  dark: Partial<IPalette>\n}\n\nexport default {\n  light: palettes.light,\n  dark: palettes.dark,\n}\n","export default {\n  lap: 'Lap',\n  start: 'Start',\n  pause: 'Pause',\n  resume: 'Resume',\n  reset: 'Reset',\n  'separator<min,s>': ':',\n  'separator<s,cs>': '.',\n  'lap index': 'Lap â„–',\n  'lap time': 'Time',\n  'lap label': 'Lap',\n  'lap index label': 'Lap number',\n  'lap time label': 'Lap time',\n}\n","import React, { useState, useRef, useEffect, useCallback } from 'react'\nimport { useFela, StyleProps } from 'react-fela'\nimport { Translations } from '../types/stopwatch'\nimport { DefaultButton, PrimaryButton, Text } from '@fluentui/react'\nimport { DetailsList, IColumn } from '@fluentui/react'\nimport { Theme } from '../theme'\nimport { IStyle } from 'fela'\n\ninterface StopwatchProps {\n  t: Translations\n}\n\nconst container = (): IStyle => ({\n  display: 'flex',\n  flexFlow: 'column nowrap',\n  height: '100%',\n})\n\nconst timer = ({ theme }: StyleProps<Theme, {}>) => ({\n  width: '100%',\n  display: 'block',\n  fontSize: '28px',\n  fontWeight: 200,\n  fill: theme.light.black,\n  '@media (prefers-color-scheme: dark)': {\n    fill: theme.dark.black,\n  },\n})\n\nconst actionRow = () => ({\n  display: 'flex',\n  flexFlow: 'row nowrap',\n  justifyContent: 'center',\n  padding: '0 .4rem',\n  margin: '1rem -.5rem 1rem 0',\n  '@media (min-width: 500px)': {\n    padding: '0 4rem',\n    margin: '2rem -.5rem 2rem 0',\n  },\n})\n\nconst btn = () => ({\n  marginRight: '.5rem',\n  paddingBottom: '.2rem',\n  flex: '1 0 0',\n})\n\nconst lapList = (): IStyle => ({\n  flex: '1 0 0',\n  overflowY: 'auto',\n})\n\nfunction renderDigits(time: number) {\n  const min = Math.floor(time / 6e4)\n    .toString(10)\n    .padStart(2, '0')\n\n  const s = (Math.floor(time / 1e3) % 60).toString(10).padStart(2, '0')\n\n  const cs = (Math.floor(time / 10) % 100).toString(10).padStart(2, '0')\n\n  return min + s + cs\n}\n\nfunction Stopwatch({ t }: StopwatchProps) {\n  const { css } = useFela<Theme, {}>({})\n\n  const timerRef = useRef<SVGSVGElement>(null)\n  const animateRef = useRef<number>()\n\n  const totalStartTimeRef = useRef<number>(0)\n  const totalOffsetRef = useRef<number>(0)\n  const totalRef = useRef<number>(0)\n\n  const lapStartTimeRef = useRef<number>(0)\n  const lapOffsetRef = useRef<number>(0)\n\n  const [laps, setLaps] = useState<number[]>([])\n  const [running, setRunning] = useState<boolean>(false)\n\n  const lapsColumns: IColumn[] = [\n    {\n      key: 'col1',\n      name: t['lap index'],\n      ariaLabel: t['lap index label'],\n      fieldName: 'lap_index',\n      minWidth: 64,\n    },\n    {\n      key: 'col2',\n      name: t['lap time'],\n      ariaLabel: t['lap time label'],\n      fieldName: 'lap_time',\n      minWidth: 64,\n    },\n  ]\n\n  const lapsItems = laps.map((lapTime, i) => {\n    const digits = renderDigits(lapTime)\n    return {\n      lap_index: `${t['lap label']} ${i + 1}`,\n      lap_time: [\n        digits.slice(0, 2),\n        t['separator<min,s>'],\n        digits.slice(2, 4),\n        t['separator<s,cs>'],\n        digits.slice(4, 6),\n      ].join(''),\n    }\n  })\n\n  function updateTimer() {\n    if (timerRef && timerRef.current) {\n      const digits = renderDigits(totalRef.current)\n      const $digits = timerRef.current.children\n      $digits[0].textContent = digits[0]\n      $digits[1].textContent = digits[1]\n      $digits[3].textContent = digits[2]\n      $digits[4].textContent = digits[3]\n      $digits[6].textContent = digits[4]\n      $digits[7].textContent = digits[5]\n    }\n  }\n\n  const animate = useCallback(() => {\n    setRunning((prevRunning) => prevRunning)\n    totalRef.current =\n      totalOffsetRef.current + Date.now() - totalStartTimeRef.current\n    updateTimer()\n    if (running) animateRef.current = requestAnimationFrame(animate)\n  }, [running])\n\n  useEffect(() => {\n    if (running) animateRef.current = requestAnimationFrame(animate)\n  }, [animate, running])\n\n  function onClickStartStop() {\n    if (running) {\n      typeof animateRef.current === 'number' &&\n        cancelAnimationFrame(animateRef.current)\n      totalOffsetRef.current = totalRef.current\n      lapOffsetRef.current = Date.now() - lapStartTimeRef.current\n      setRunning(false)\n    } else {\n      setRunning(true)\n      lapStartTimeRef.current = Date.now()\n      totalStartTimeRef.current = Date.now()\n    }\n  }\n\n  function onClickLapReset() {\n    if (running) {\n      // Lap\n      setLaps([\n        ...laps,\n        lapOffsetRef.current + Date.now() - lapStartTimeRef.current,\n      ])\n      lapStartTimeRef.current = Date.now()\n      lapOffsetRef.current = 0\n    } else if (totalOffsetRef.current > 0) {\n      // Reset\n      totalRef.current = 0\n      totalOffsetRef.current = 0\n      lapOffsetRef.current = 0\n      setLaps([])\n      updateTimer()\n    }\n  }\n\n  return (\n    <section className={css(container)}>\n      <svg\n        viewBox=\"0 0 116 30\"\n        className={css(timer)}\n        role=\"timer\"\n        aria-live=\"polite\"\n        aria-atomic=\"true\"\n        ref={timerRef}\n      >\n        <text x=\"8.5\" y=\"28\" textLength=\"17\" textAnchor=\"middle\">\n          0\n        </text>\n        <text x=\"25.5\" y=\"28\" textLength=\"17\" textAnchor=\"middle\">\n          0\n        </text>\n        <text x=\"37.5\" y=\"28\" textLength=\"7\" textAnchor=\"middle\">\n          {t['separator<min,s>']}\n        </text>\n        <text x=\"49.5\" y=\"28\" textLength=\"17\" textAnchor=\"middle\">\n          0\n        </text>\n        <text x=\"66.5\" y=\"28\" textLength=\"17\" textAnchor=\"middle\">\n          0\n        </text>\n        <text x=\"78.5\" y=\"28\" textLength=\"7\" textAnchor=\"middle\">\n          {t['separator<s,cs>']}\n        </text>\n        <text x=\"90.5\" y=\"28\" textLength=\"17\" textAnchor=\"middle\">\n          0\n        </text>\n        <text x=\"107.5\" y=\"28\" textLength=\"17\" textAnchor=\"middle\">\n          0\n        </text>\n      </svg>\n      <div className={css(actionRow)}>\n        <DefaultButton\n          className={css(btn)}\n          onClick={onClickLapReset}\n          disabled={!(running || totalOffsetRef.current > 0)}\n        >\n          <Text variant=\"large\">\n            {running\n              ? t['lap']\n              : totalOffsetRef.current > 0\n              ? t['reset']\n              : t['lap']}\n          </Text>\n        </DefaultButton>\n        <PrimaryButton className={css(btn)} onClick={onClickStartStop}>\n          <Text variant=\"large\">\n            {running\n              ? t['pause']\n              : totalOffsetRef.current > 0\n              ? t['resume']\n              : t['start']}\n          </Text>\n        </PrimaryButton>\n      </div>\n      <div className={css(lapList)} data-is-scrollable={true}>\n        <DetailsList\n          columns={lapsColumns}\n          items={lapsItems}\n          selectionMode={0}\n        />\n      </div>\n    </section>\n  )\n}\n\nexport default Stopwatch\n","import React from 'react'\nimport { RendererProvider, ThemeProvider, useFela } from 'react-fela'\nimport { createRenderer, IStyle } from 'fela'\nimport theme from './theme'\nimport t from './t10s/en'\nimport Stopwatch from './components/Stopwatch'\n\nconst felaRenderer = createRenderer()\n\nconst outer = (): IStyle => ({\n  display: 'flex',\n  flexFlow: 'row nowrap',\n  justifyContent: 'center',\n  minHeight: '100vh',\n  maxWidth: '800px',\n  margin: '0 auto',\n})\n\nconst inner = (): IStyle => ({\n  boxSizing: 'border-box',\n  padding: '4rem',\n  width: '100%',\n})\n\nfunction Main() {\n  const { css } = useFela({})\n  return (\n    <main className={css(outer)} role=\"application\">\n      <div className={css(inner)}>\n        <Stopwatch t={t} />\n      </div>\n    </main>\n  )\n}\n\nfunction App() {\n  return (\n    <RendererProvider renderer={felaRenderer}>\n      <ThemeProvider theme={theme}>\n        <Main />\n      </ThemeProvider>\n    </RendererProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}